// prisma/seed.ts
import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...')

  try {
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
    console.log('üßπ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤...')
    await prisma.user.deleteMany()
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Users
    console.log('üë• ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô...')
    
    // Hash passwords
    const adminPassword = await bcrypt.hash('1234', 12)
    const userPassword = await bcrypt.hash('user123', 12)
    const mayPassword = await bcrypt.hash('may123', 12)
    const waiwaiPassword = await bcrypt.hash('waiwai123', 12)
    const sudaPassword = await bcrypt.hash('suda123', 12)
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Admin User
    const adminUser = await prisma.user.create({
      data: {
        username: 'admin',
        password: adminPassword,
        email: 'admin@lazada-payment.com',
        firstName: 'Administrator',
        lastName: 'System',
        role: 'admin',
        isActive: true
      }
    })
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Admin User:', adminUser.username)

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Regular User
    const regularMay = await prisma.user.create({
      data: {
        username: 'may',
        password: mayPassword,
        email: 'may@lazada-payment.com',
        firstName: 'May',
        lastName: 'User',
        role: 'user',
        isActive: true
      }
    })
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Regular User:', regularMay.username)

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Regular User
    const regularUser = await prisma.user.create({
      data: {
        username: 'user',
        password: userPassword,
        email: 'user@lazada-payment.com',
        firstName: 'Regular',
        lastName: 'User',
        role: 'user',
        isActive: true
      }
    })
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Regular User:', regularUser.username)

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á WAIWAI Store User
    const waiwaiUser = await prisma.user.create({
      data: {
        username: 'waiwai',
        password: waiwaiPassword,
        email: 'waiwai@lazada-payment.com',
        firstName: '‡πÑ‡∏ß‡πÑ‡∏ß',
        lastName: 'Store',
        role: 'store_waiwai',
        isActive: true
      }
    })
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á WAIWAI Store User:', waiwaiUser.username)

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á SERDA Store User
    const sudaUser = await prisma.user.create({
      data: {
        username: 'suda',
        password: sudaPassword,
        email: 'suda@lazada-payment.com',
        firstName: '‡∏ã‡∏∑‡∏≠‡∏î‡∏∞',
        lastName: 'Store',
        role: 'store_suda',
        isActive: true
      }
    })
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á SERDA Store User:', sudaUser.username)

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Demo Users ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    const demoManager = await prisma.user.create({
      data: {
        username: 'manager',
        password: await bcrypt.hash('manager123', 12),
        email: 'manager@lazada-payment.com',
        firstName: 'Manager',
        lastName: 'Demo',
        role: 'manager',
        isActive: true
      }
    })
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Manager User:', demoManager.username)

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Inactive User ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    const inactiveUser = await prisma.user.create({
      data: {
        username: 'inactive',
        password: await bcrypt.hash('inactive123', 12),
        email: 'inactive@lazada-payment.com',
        firstName: 'Inactive',
        lastName: 'User',
        role: 'user',
        isActive: false
      }
    })
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Inactive User:', inactiveUser.username)

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Sample Process Logs
    console.log('üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á Process Logs ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...')
    
    await prisma.processLog.createMany({
      data: [
        {
          action: 'SYSTEM_INIT',
          status: 'SUCCESS',
          message: '‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
          details: { version: '1.0.0', environment: 'development' },
          userId: adminUser.id
        },
        {
          action: 'USER_SEED',
          status: 'SUCCESS',
          message: 'Seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          details: { totalUsers: 6 },
          userId: adminUser.id
        }
      ]
    })

    console.log('üìä ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô...')
    
    // ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á
    const userCount = await prisma.user.count()
    const activeUserCount = await prisma.user.count({ where: { isActive: true } })
    
    console.log('\nüéâ Seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!')
    console.log('=' .repeat(50))
    console.log(`üë• ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${userCount}`)
    console.log(`‚úÖ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ: ${activeUserCount}`)
    console.log('=' .repeat(50))
    
    console.log('\nüîê ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö:')
    console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê')
    console.log('‚îÇ Username    ‚îÇ Password    ‚îÇ Role            ‚îÇ')
    console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§')
    console.log('‚îÇ admin       ‚îÇ 1234        ‚îÇ admin           ‚îÇ')
    console.log('‚îÇ user        ‚îÇ user123     ‚îÇ user            ‚îÇ')
    console.log('‚îÇ may         ‚îÇ may123      ‚îÇ user            ‚îÇ')
    console.log('‚îÇ waiwai      ‚îÇ waiwai123   ‚îÇ store_waiwai    ‚îÇ')
    console.log('‚îÇ suda        ‚îÇ suda123     ‚îÇ store_suda      ‚îÇ')
    console.log('‚îÇ manager     ‚îÇ manager123  ‚îÇ manager         ‚îÇ')
    console.log('‚îÇ inactive    ‚îÇ inactive123 ‚îÇ user (inactive) ‚îÇ')
    console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò')
    
    console.log('\nüìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:')
    console.log('1. ‡∏£‡∏±‡∏ô‡∏£‡∏∞‡∏ö‡∏ö: npm run dev')
    console.log('2. ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ admin/1234')
    console.log('3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå')
    console.log('4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤ AS400')

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error)
    throw error
  }
}

main()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
    console.log('\nüîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß')
  })